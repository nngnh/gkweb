# Generated by Django 3.0.3 on 2020-06-23 16:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArtsCollegeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=8, null=True, verbose_name='学校编码')),
                ('collegeHistoryId', models.IntegerField(blank=True, max_length=8, null=True)),
                ('province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('subject', models.CharField(blank=True, max_length=8, null=True, verbose_name='类别')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='批次')),
                ('year', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='年')),
                ('moveDocGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='调档分')),
                ('averageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='平均分')),
                ('moveDocGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='调档本一线差')),
                ('averageGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='平均本一线差')),
                ('moveDocLocation', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='调档分位次')),
                ('positionMoveDocGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位调档分')),
                ('averageLocation', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='平均分位次')),
                ('positionAverageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位平均分')),
            ],
            options={
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='ArtsEnroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=6, null=True, verbose_name='学校编码')),
                ('collegeHistoryId', models.IntegerField(blank=True, max_length=6, null=True)),
                ('province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('subject', models.CharField(blank=True, max_length=8, null=True, verbose_name='类别')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='批次')),
                ('historyProYear', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='年')),
                ('realRecruitTotal', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='实际招生人数')),
                ('firstWishTotal', models.IntegerField(blank=True, max_length=8, null=True, verbose_name='批线上第一 志愿报考数')),
                ('enrollProperty', models.CharField(blank=True, max_length=7, null=True, verbose_name='录取性质')),
                ('firstWishSucTotal', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='第一志愿录取数')),
                ('secondWishSucTotal', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='其他志愿录取数')),
            ],
            options={
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='ArtsMajorLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=8, null=True, verbose_name='学校编码')),
                ('collegeHistoryId', models.IntegerField(blank=True, max_length=8, null=True)),
                ('province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('subject', models.CharField(blank=True, max_length=8, null=True, verbose_name='类别')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='批次')),
                ('year', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='年')),
                ('speicaltyName', models.CharField(blank=True, max_length=130, null=True, verbose_name='专业名称')),
                ('matricGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='实录分数')),
                ('specialtyGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='本一实录线差')),
                ('matricGradePosition', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='本一实录位次')),
                ('positionMatricGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位实录分')),
                ('averageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='平均分数')),
                ('averageGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='本一平均线差')),
                ('averageGradePosition', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='本一平均位次')),
                ('positionAverageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位平均分')),
            ],
            options={
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='CollegeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=16, null=True, verbose_name='学校编码')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('categoryName', models.CharField(blank=True, max_length=5, null=True, verbose_name='类型')),
                ('propertyName', models.CharField(blank=True, max_length=8, null=True, verbose_name='性质')),
                ('levelName', models.CharField(blank=True, max_length=100, null=True, verbose_name='级别')),
                ('provinceName', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('cityName', models.CharField(blank=True, max_length=16, null=True, verbose_name='城市')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='地址')),
                ('url', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校官网')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='招生电话')),
                ('introduce', models.TextField(null=True, verbose_name='学校简介')),
            ],
            options={
                'verbose_name': '学校信息',
                'verbose_name_plural': '学校信息',
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='MajorAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(max_length=8, verbose_name='学校编码')),
                ('specialtyCode', models.IntegerField(max_length=10, verbose_name='专业编码')),
                ('speicaltyName', models.CharField(max_length=130, verbose_name='专业名称')),
                ('specialtyPlace', models.IntegerField(max_length=5, verbose_name='专业名次')),
                ('specialtyComment', models.CharField(max_length=5, verbose_name='专业级别')),
                ('collegeCount', models.IntegerField(max_length=6, verbose_name='开设院校数')),
                ('isKeyConstruction', models.BooleanField(verbose_name='国家特色专业')),
            ],
            options={
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='SciCollegeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=8, null=True, verbose_name='学校编码')),
                ('collegeHistoryId', models.IntegerField(blank=True, max_length=8, null=True)),
                ('province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('subject', models.CharField(blank=True, max_length=8, null=True, verbose_name='类别')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='批次')),
                ('year', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='年')),
                ('moveDocGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='调档分')),
                ('averageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='平均分')),
                ('moveDocGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='调档本一线差')),
                ('averageGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='平均本一线差')),
                ('moveDocLocation', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='调档分位次')),
                ('positionMoveDocGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位调档分')),
                ('averageLocation', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='平均分位次')),
                ('positionAverageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位平均分')),
            ],
            options={
                'verbose_name': '理科调档线',
                'verbose_name_plural': '理科调档线',
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='SciEnroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=6, null=True, verbose_name='学校编码')),
                ('collegeHistoryId', models.IntegerField(blank=True, max_length=6, null=True)),
                ('province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('subject', models.CharField(blank=True, max_length=8, null=True, verbose_name='类别')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='批次')),
                ('historyProYear', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='年')),
                ('realRecruitTotal', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='实际招生人数')),
                ('firstWishTotal', models.IntegerField(blank=True, max_length=8, null=True, verbose_name='批线上第一 志愿报考数')),
                ('enrollProperty', models.CharField(blank=True, max_length=7, null=True, verbose_name='录取性质')),
                ('firstWishSucTotal', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='第一志愿录取数')),
                ('secondWishSucTotal', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='其他志愿录取数')),
            ],
            options={
                'ordering': ('collegeCode',),
            },
        ),
        migrations.CreateModel(
            name='SciMajorLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeCode', models.IntegerField(blank=True, max_length=8, null=True, verbose_name='学校编码')),
                ('collegeHistoryId', models.IntegerField(blank=True, max_length=8, null=True)),
                ('province', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('collegeName', models.CharField(blank=True, max_length=100, null=True, verbose_name='学校名称')),
                ('subject', models.CharField(blank=True, max_length=8, null=True, verbose_name='类别')),
                ('sequence', models.CharField(blank=True, max_length=100, null=True, verbose_name='批次')),
                ('year', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='年')),
                ('speicaltyName', models.CharField(blank=True, max_length=130, null=True, verbose_name='专业名称')),
                ('matricGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='实录分数')),
                ('specialtyGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='本一实录线差')),
                ('matricGradePosition', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='本一实录位次')),
                ('positionMatricGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位实录分')),
                ('averageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='平均分数')),
                ('averageGradeDiff', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='本一平均线差')),
                ('averageGradePosition', models.IntegerField(blank=True, max_length=10, null=True, verbose_name='本一平均位次')),
                ('positionAverageGrade', models.IntegerField(blank=True, max_length=5, null=True, verbose_name='成都二诊同位平均分')),
            ],
            options={
                'verbose_name': '理科专业录取线',
                'verbose_name_plural': '理科专业录取线',
                'ordering': ('collegeCode',),
            },
        ),
    ]
